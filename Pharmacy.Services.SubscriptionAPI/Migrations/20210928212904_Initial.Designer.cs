// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pharmacy.Services.SubscriptionAPI.DbContexts;

namespace Pharmacy.Services.SubscriptionAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210928212904_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Mfgdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerPackage")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitInPackage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.DrugDispatch", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDispatched")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.ToTable("DrugDispatches");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Doctor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<int?>("Drug_Id")
                        .HasColumnType("int");

                    b.Property<string>("Insurance_Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Insurance_policy_number")
                        .HasColumnType("int");

                    b.Property<DateTime>("Prescription_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Drug_Id");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Drug_ID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Prescription_Id")
                        .HasColumnType("int");

                    b.Property<string>("Refill_Occurrence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Subscription_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Prescription_Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.DrugDispatch", b =>
                {
                    b.HasOne("Pharmacy.Services.SubscriptionAPI.Models.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.Prescription", b =>
                {
                    b.HasOne("Pharmacy.Services.SubscriptionAPI.Models.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("Drug_Id");

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("Pharmacy.Services.SubscriptionAPI.Models.Subscription", b =>
                {
                    b.HasOne("Pharmacy.Services.SubscriptionAPI.Models.Prescription", "Prescription")
                        .WithMany()
                        .HasForeignKey("Prescription_Id");

                    b.Navigation("Prescription");
                });
#pragma warning restore 612, 618
        }
    }
}
